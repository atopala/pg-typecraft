// File generated by pg-typecraft. Do not edit.
import postgres from "postgres";
import * as lib from "./pg-typed.js";

export interface IOrderItem {
   $pk: postgres.Helper<"order_item_pk">;
   $table: "order_item";
   $all: postgres.Helper<
      [
         "order_item.quantity",
         "order_item.order_id",
         "order_item.product_id",
         "order_item.product_price",
         "order_item.discount_price",
         "order_item.order_item_id",
         "order_item.created_at",
         "order_item.modified_at",
      ]
   >;

   /**
    * quantity int4
    */
   quantity: postgres.Helper<"order_item.quantity">;

   /**
    * order_id uuid
    */
   orderId: postgres.Helper<"order_item.order_id">;

   /**
    * product_id uuid
    */
   productId: postgres.Helper<"order_item.product_id">;

   /**
    * product_price numeric
    */
   productPrice: postgres.Helper<"order_item.product_price">;

   /**
    * discount_price numeric
    */
   discountPrice: postgres.Helper<"order_item.discount_price">;

   /**
    * order_item_id uuid default gen_random_uuid()
    */
   orderItemId: postgres.Helper<"order_item.order_item_id">;

   /**
    * created_at timestamptz
    */
   createdAt: postgres.Helper<"order_item.created_at">;

   /**
    * modified_at timestamptz
    */
   modifiedAt: postgres.Helper<"order_item.modified_at">;
   $values(...values: IOrderItemInsert[]): postgres.Helper<IOrderItemInsert[], []>;
   $set(value: IOrderItemUpdate): postgres.Helper<IOrderItemUpdate, []>;
}

export function newOrderItem(sql: postgres.Sql): IOrderItem & postgres.Helper<"one_sql.order_item"> {
   const obj: IOrderItem = {
      $pk: sql("order_item_pk"),
      $table: "order_item",
      $all: sql([
         "order_item.quantity",
         "order_item.order_id",
         "order_item.product_id",
         "order_item.product_price",
         "order_item.discount_price",
         "order_item.order_item_id",
         "order_item.created_at",
         "order_item.modified_at",
      ]),
      $values(...values: IOrderItemInsert[]) {
         return sql<IOrderItemInsert[], []>(values);
      },

      $set(value: IOrderItemUpdate) {
         return sql<IOrderItemUpdate, []>(value);
      },

      /**
       * quantity int4
       */
      quantity: sql("order_item.quantity"),

      /**
       * order_id uuid
       */
      orderId: sql("order_item.order_id"),

      /**
       * product_id uuid
       */
      productId: sql("order_item.product_id"),

      /**
       * product_price numeric
       */
      productPrice: sql("order_item.product_price"),

      /**
       * discount_price numeric
       */
      discountPrice: sql("order_item.discount_price"),

      /**
       * order_item_id uuid default gen_random_uuid()
       */
      orderItemId: sql("order_item.order_item_id"),

      /**
       * created_at timestamptz
       */
      createdAt: sql("order_item.created_at"),

      /**
       * modified_at timestamptz
       */
      modifiedAt: sql("order_item.modified_at"),
   };
   const from = sql("one_sql.order_item");
   return Object.assign(from, obj);
}

export type IOrderItemInsert = {
   quantity: number;
   orderId: string;
   productId: string;
   productPrice: string;
   discountPrice?: string | null;
   orderItemId?: string;
   createdAt: Date;
   modifiedAt: Date;
};

export type IOrderItemUpdate = Partial<IOrderItemInsert>;

export type IOrderItemSelect = {
   readonly quantity: number;
   readonly orderId: string;
   readonly productId: string;
   readonly productPrice: string;
   readonly discountPrice: string | null;
   readonly orderItemId: string;
   readonly createdAt: Date;
   readonly modifiedAt: Date;
};

export type IOrderItemJson = lib.JsonRow<IOrderItemSelect>;
