name: Build and Test (Composite)
description: Common steps for build, test, and reporting in CI and release flows

inputs:
  CUCUMBER_PUBLISH_TOKEN:
    description: Cucumber.io publish token
    required: true
  GITHUB_TOKEN:
    description: GitHub token
    required: true

runs:
  using: "composite"
  steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version-file: 'package.json'  # This will read from engines.node

    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        run_install: false
        package_json_file: 'package.json'  # This will read from packageManager

    - name: Setup pnpm cache
      uses: actions/cache@v3
      with:
        path: |
          ~/.pnpm-store
        key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-

    - name: Install dependencies (1)
      run: pnpm install --frozen-lockfile
      shell: bash

    - name: Build pg-typecraft
      id: build-pg-typecraft
      run: pnpm --filter='./packages/pg-typecraft' run build
      shell: bash

    - name: Install dependencies (2)
      run: pnpm install --frozen-lockfile
      shell: bash

    - name: Wait for Postgres
      uses: ./.github/actions/wait-for-postgres

    - name: Migrate database
      shell: bash
      run: pnpm -w run db-migrate

    - name: Run codegen
      id: codegen
      shell: bash
      run: |
        pnpm --filter='./packages/testing-e2e' run codegen || pino

    - name: List generated files
      shell: bash
      run: |
        tree ./packages/testing-e2e/src

#    - name: Run tests
#      id: tests
#      shell: bash
#      run: |
#        pnpm -r run test
#
    - name: Run tests
      id: tests
      shell: bash
      run: |
        OUTPUT=$(pnpm -r run test)
        echo "$OUTPUT"
        REPORT_URL=$(echo "$OUTPUT" | grep -oE 'https://reports.cucumber.io/reports/[a-zA-Z0-9-]+')
        echo "REPORT_URL=$REPORT_URL" >> $GITHUB_ENV

        if [ -n "$REPORT_URL" ]; then
          echo "🧪 Cucumber Report: [$REPORT_URL]($REPORT_URL)" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ Cucumber report URL not found" >> $GITHUB_STEP_SUMMARY
        fi

    - name: 💬 Comment report URL on PR
      shell: bash
      if: ${{ github.event_name == 'pull_request' && env.REPORT_URL != '' }}
      run: |
        gh pr comment ${{ github.event.pull_request.number }} --body "🧪 Cucumber Report: [${{ env.REPORT_URL }}](${{ env.REPORT_URL }})"
      env:
        GH_TOKEN: ${{ inputs.GITHUB_TOKEN }}

    - name: Upload test results
      uses: actions/upload-artifact@v4
      with:
        name: cucumber-report.html
        path: ./packages/testing-e2e/test-results/cucumber-report.html

    - name: Publish test results to GitHub
      uses: mikepenz/action-junit-report@v4
      with:
        check_name: 'Cucumber Tests'
        report_paths: './packages/testing-e2e/test-results/cucumber-junit.xml'